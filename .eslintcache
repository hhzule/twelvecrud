[{"/home/zulehuma/Desktop/twelvecrud/crud/src/App.js":"1","/home/zulehuma/Desktop/twelvecrud/crud/src/reportWebVitals.js":"2","/home/zulehuma/Desktop/twelvecrud/crud/src/index.js":"3","/home/zulehuma/Desktop/twelvecrud/crud/src/Header.js":"4"},{"size":2637,"mtime":1606654972540,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606634829175,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606634829175,"results":"8","hashOfConfig":"6"},{"size":515,"mtime":1606656443227,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"w88y7x",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zulehuma/Desktop/twelvecrud/crud/src/App.js",["19"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Header\"\n\nfunction App() {\n  const [mydata, setData] = useState([]);\n  const [todo, setTodo] = useState()\n  const [input, setInput] = useState()\n  const [isloading, setIsloading] = useState(true)\n  useEffect(() => {\n    ; (async () => {\n      setIsloading(true);\n      console.log(\"fetch called\")\n      await fetch(\"/.netlify/functions/data\")\n        .then(res => res.json())\n        .then(data => {\n          setData(data)\n        })\n      setIsloading(false)\n\n    })()\n  }, [todo])\n\n  console.log(mydata, \"save\")\n  const handleadd = (val) => {\n    fetch(`/.netlify/functions/add`, {\n      method: 'POST',\n      body: JSON.stringify(val)\n    }).then(response => response.json())\n      .then(data => {\n\n        // console.log(\"Data: \" + JSON.stringify(data.ref['@ref'].id));\n        console.log(data.ref['@ref'].id, \"from add call\")\n        setTodo(data);\n      });\n  }\n  const handledelete = (id) => {\n    console.log(id, \"from del\")\n    fetch(`/.netlify/functions/deltask`, {\n      method: 'POST',\n      body: JSON.stringify(id)\n    }).then(response => response.json())\n      .then(data => {\n\n        // console.log(\"Data: \" + JSON.stringify(data.ref['@ref'].id));\n        console.log(data.ref['@ref'].id, \"from add call\")\n        setTodo(data);\n      });\n  }\n\n  const handleupdate = (id, task) => {\n    console.log(id + task, \"from update\")\n    const updata = {\n      id,\n      task\n    }\n    fetch(`/.netlify/functions/update`, {\n      method: 'POST',\n      body: JSON.stringify(updata)\n    }).then(response => response.json())\n      .then(data => {\n\n        // console.log(\"Data: \" + JSON.stringify(data.ref['@ref'].id));\n        console.log(data.ref['@ref'].id, \"from add updata\")\n        setTodo(data);\n      });\n  }\n\n  return (\n\n    <div className=\"App\">\n      <Header />\n      <div className=\"primary\"> <form>\n        <input value={input} onChange={(e) => setInput(e.target.value)}></input>\n        <button onClick={() => handleadd(input)}>add</button>\n      </form>\n        {\n          mydata?.map((d) => <div className=\"single-data\"\n            key={d.ref['@ref'].id}>\n            <div className=\"heading\">\n              <h2>\n                {JSON.stringify(d.data.task)}\n\n              </h2>\n            </div>\n\n            <div className=\"btns\">\n              <button onClick={() => handledelete(d.ref['@ref'].id)}>delete</button>\n              <button onClick={() => handleupdate(d.ref['@ref'].id, \"now\")}>update</button>\n            </div>\n\n          </div>\n          )}\n      </div>\n\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","/home/zulehuma/Desktop/twelvecrud/crud/src/reportWebVitals.js",[],"/home/zulehuma/Desktop/twelvecrud/crud/src/index.js",[],"/home/zulehuma/Desktop/twelvecrud/crud/src/Header.js",[],{"ruleId":"20","severity":1,"message":"21","line":9,"column":10,"nodeType":"22","messageId":"23","endLine":9,"endColumn":19},"no-unused-vars","'isloading' is assigned a value but never used.","Identifier","unusedVar"]